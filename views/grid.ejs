<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Grid layout</title>
    <link rel="stylesheet" href="/css/grid.css">
    <script src="https://d3js.org/d3.v3.min.js"></script>
    <script src="https://d3js.org/topojson.v0.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
</head>
<body>
    <div class="page">
        <div class="map"></div>
        <div class="electiondata">
            <div class="select states">
                <select name="state" id="state"></select>
                <select name="year" id="year"></select>
                <button class="fetch" type="submit">Fetch</button>
            </div>
            <div class="ac_name"></div>
            <div class="constituency">
                <div class="candidates" style="display: none;" ></div>
                <div class="parties" >
                    <div class="pie"></div>
                </div>
            </div>
        </div>
    </div>
    <script>
        var states;
var selectedState;
var selectedStateId = '<%=state%>' || "2"
var selectedYear = '<%=year%>' || "2014"
console.log(selectedStateId)
console.log(selectedYear)
var width = window.innerWidth * 0.67 ;
var height = window.innerHeight * 0.96;
var electionData = []

var radius = window.innerHeight * 0.23

var pie = d3.layout.pie().startAngle(-90 * (Math.PI / 180)).endAngle(90 * (Math.PI / 180)).padAngle(.01)
var arc = d3.svg.arc().innerRadius(radius - radius * 0.4).outerRadius(radius)
var pie_svg = d3.select('.pie').append('svg')
                .attr('width' , window.innerWidth* 0.29 )
                .attr('height' , window.innerHeight * 0.23)

var pie_g = pie_svg.append('g')



    


d3.json("/json/states_data.json", function(error, result){
    states = result
    for(var i = 0; i<states.length; i++ ){
        if(Number(selectedStateId == states[i].id)){
            selectedState = states[i]
            var partiesDiv = d3.select(".parties");
            var partyDiv = partiesDiv.selectAll(".party")
            partyDiv.data(sortParties(selectedState.election_years[selectedYear])).enter().append("div").attr('class' , function(d,i){ return "party " +  d.party_name.replaceAll(' ','_') })
                        .html(function(d){ return '<div class="partyName">' + d.party_name + '</div><div class="partyDetails"><div class="won"><div class="caption">Won</div><div class="number">' + d['seats'] + '</div></div><div class="votes"><div class="caption">Votes</div><div class="number">' + (d['votes'] || "NA") + '</div></div><div class="votepercent"><div class="caption">Vote %</div><div class="number">' + (d['vote %'] || "NA") + '</div></div></div>'})
            partyDiv.attr('class' , function(d,i){ return "party " + d.Party.replaceAll(' ','_') } )
            break
        }
    } 

    pie_g.attr("transform" , 'translate(' + (window.innerWidth * 0.29)/ 2  + ',' + window.innerHeight * 0.23 + ')')
        .attr("stroke", 'black')
        .attr("stroke-width", 1)
        .attr("stroke-linejoin", 'round')
        .selectAll("arc")
        .data(pie(selectedState.election_years[selectedYear].map(i => {return i.seats})))
        .enter().append('g')
        .append("path")
        .attr('fill' , function(d,i){return color(selectedState.election_years[selectedYear][i].party_name)})
        .attr('d' , arc)
    
    pie_g.append('text')
        .attr('x' , '-25')
        .attr('y', '-20')
        .text(selectedState.total_seats)
        .attr('class', 'totalseats')

    d3.json("/json/" + selectedState.state_name + "/" + selectedState.state_name + "-" + selectedYear + ".json", function(error, result){
        electionData = result
    })

    var projection = d3.geo.mercator().center(selectedState.center).scale(selectedState.scale).translate([width/2 , height/2]);
    var svg = d3.select(".map").append("svg")
        .attr("width", width)
        .attr("height", height);
    var path = d3.geo.path()
        .projection(projection);
    var g = svg.append("g");
    g.append('text')
        .attr("x", width/3 )
        .attr("y", height /12)
        .text(selectedYear + " " + selectedState.state_name+ " Election Result");
    d3.json("/json/" + selectedState.state_name + "/" + selectedState.state_name + ".json", function(error, topology) {
        g.selectAll("path")
            .data(topojson.object(topology, topology.objects[selectedState.state_name])
                .geometries)
        .enter()
            .append("path")
            .attr("d", path)
            .attr("stroke","black")
            .attr("stroke-width" , '0.7px')
            .style("fill", function(d) { return getWinnerPartyColor(d.properties.ac_no);} )
            .on('mouseover', handleMouseOver)
            .on('mouseout', handleMouseOut)
            .on('click', handleClick)
    });

    var state = d3.select('#state')
    state.selectAll('option').data(result)
        .enter()
        .append('option')
        .attr('value', function(d){return d.id})
        .text(function(d){return d.state_name})
})


$('#state').change((event) => {
    var year = d3.select('#year')
    year.selectAll('option').remove()
    year.selectAll('option').data(function(){ 
        for(var i = 0; i<states.length; i++ ){
            if(Number(event.target.value == states[i].id)){
                return Object.keys(states[i].election_years)
            }
        } 
    }).enter().append('option').attr('value', function(d){return d}).text(function(d){return d})
})

$('.fetch').click(() => {
    var state = $('#state').val()
    var year = $('#year').val()
    var url = '?state=' + state + '&year=' + year
    window.location.href = url
})

function getWinnerPartyColor(ac_no){
    var candidates;
    for(var i = 0; i<electionData.length; i++){
        if(electionData[i]['ac_no'] == ac_no){
            candidates = electionData[i]['candidates']
            candidates.sort((a,b) => {return b['Total Votes'] - a['Total Votes']})
            return color(candidates[0]['Party'])
        }
    }
}



function color(party){
    if(party === "Aam Aadmi Party"){
        return "#0066A4";
    }else if(party === "Indian National Congress"){
        return "#19AAED";
    }else if(party === "Bharatiya Janata Party"){
        return "#FF9933";
    }else if(party === "Shiromani Akali Dal"){
        return "#ebc634";
    }else if(party === "Bahujan Samaj Party"){
        return "#22409A";
    }else if(party === "Samajwadi Party"){
        return "red";
    }else if(party === "Apna Dal (Soneylal)"){
        return "#9500ff"
    }else if(party === "Rashtriya Lok Dal"){
        return "green"
    }
    else if(party === "Rashtriya Janata Dal"){
        return "#008000"
    }
    else if(party == "Suheldev Bharatiya Samaj Party"){
        return "#ffd500"
    }else if(party == "Nirbal Indian Shoshit Hamara Aam Dal"){
        return "#823426"
    }else if(party == "Jansatta Dal Loktantrik"){
        return "#eaff00"
    }
    else if(party == "Telugu Desam"){
        return "#FFFF00"
    }
    else if(party == "Yuvajana Sramika Rythu Congress Party"){
        return "blue"
    }
    else if(party == "Janasena Party"){
        return "red"
    }
    else if(party == "Janata Dal  (Secular)"){
        return "#138808"
    }
    else if(party == "Janata Dal (United)" || party == "Janata Dal  (United)"){
        return "#003366"
    }
    else if(party == "Biju Janata Dal"){
        return '#006400'
    }
    else if(party == "Communist Party of India  (Marxist)"){
        return '#FF1D15'
    }
    else if(party == "Communist Party of India"){
        return '#FF0000'
    }
    else if(party == "Communist Party of India  (Marxist-Leninist)  (Liberation)"){
        return '#FF1D15'
    }
    else if(party == "All India Trinamool Congress"){
        return '#20C646'
    }
    else if(party == "All India United Democratic Front"){
        return '#348017'
    }
    else if(party == "Bodoland Peoples Front"){
        return '#FF6600'
    }
    else if(party == "United People’s Party, Liberal"){
        return '#F3ED13'
    }
    else if(party == "Asom Gana Parishad"){
        return '#99CCFF'
    }
    else if(party == "All India Majlis-E-Ittehadul Muslimeen"){
        return '#136B4B'
    }
    else if(party == "Vikassheel Insaan Party"){
        return '#0000ff'
    }
    else if(party == "Hindustani Awam Morcha (Secular)"){
        return '#C9120C'
    }
    else if(party == "Lok Jan Shakti Party"){
        return '#0093DD'
    }
    else if(party == "Jannayak Janta Party"){
        return '#FFFF00'
    }
    else if(party == "Jharkhand Mukti Morcha"){
        return '#215B30'
    }
    else if(party == "Jharkhand Vikas Morcha (Prajatantrik)"){
        return '#EDFB06'
    }
    else if(party == "AJSU Party"){
        return '#FF33FF'
    }
    else if(party == "Nationalist Congress Party"){
        return '#00B2B2'
    }
    else if(party == "Shiv Sena" || party ==  "Shivsena"){
        return '#F26F21'
    }
    else if(party == "Telangana Rashtra Samithi"){
        return '#FF0274'
    }
    else if(party == "Janta Congress Chhattisgarh (J)"){
        return '#FFC0DB'
    }
    else if(party == "Indian National Lok Dal"){
        return '#336600'
    }
    else if(party == "Indian Union Muslim League" || party == "Muslim League Kerala State Committee"){
        return '#228B22'
    }
    else if(party == "Kerala Congress  (M)"){
        return '#CC9900'
    }
    else if(party == "Naga Peoples Front"){
        return '#990066'
    }
    else if(party == "National People's Party"){
        return '#DB7093'
    }
    else if(party == "Kuki People’s Alliance"){
        return '#FF0000'
    }
    else if(party == "Manipur State Congress Party"){
        return '#99CC99'
    }
    else if(party == "United Democratic Party"){
        return '#CEF2E0'
    }
    else if(party == "People's Democratic Front"){
        return 'yellow'
    }
    else if(party == "Hill State People’s Democratic Party"){
        return 'blue'
    }
    else if(party == "Mizo National Front"){
        return '#2E5694'
    }
    else if(party == "Nationalist Democratic Progressive Party"){
        return '#ED1B24'
    }
    else if(party == "Rashtriya Loktantrik Party"){
        return '#dbe934'
    }
    else if(party == "Dravida Munnetra Kazhagam"){
        return '#dd1100'
    }
    else if(party == "All India Anna Dravida Munnetra Kazhagam"){
        return '#138808'
    }
    else if(party == "Desiya Murpokku Dravida Kazhagam"){
        return '#ffea19'
    }
    else if(party == "Indigenousn People's Front Of Tripura"){
        return '#008000'
    }
    else if(party == "Revolutionary Socialist Party"){
        return '#FF4A4A'
    }
    else if(party == "All India Forward Bloc"){
        return '#D70000'
    }
    else if(party == "Gorkha Janmukti Morcha"){
        return '#52D017'
    }
    

    else{
        return "#bdbdbd";
    }
}

function handleMouseOver(d, i) {  
}

function handleMouseOut(d, i) {
}
function handleClick(d, i) {
    for(var i = 0 ; i<= electionData.length ; i++){
        if(electionData[i].ac_no == Number(d.properties.ac_no)){
        d3.select('.ac_name').text(electionData[i].ac_no + "-" +electionData[i].ac_name)
        var partyDiv = d3.select(".parties");
        partyDiv.style('display', 'none')
        var candidatesDiv = d3.select(".candidates");
        candidatesDiv.style('display' , 'grid')
        var candidateDiv = candidatesDiv.selectAll(".candidate")
        candidateDiv.remove()
        candidateDiv = candidatesDiv.selectAll(".candidate")
        candidateDiv.data(sortCandidates(electionData[i].candidates)).enter().append("div").attr('class' , function(d,i){ return "candidate " +  d.Party.replaceAll(' ','_') })
                    .html(function(d){ return '<div class="partyName">' + d.Party + '</div><div class="candidateName">' + d.Candidate + '</div><div class="candidateDetails"><div class="votes"><div class="caption">Votes</div><div class="number">' + d['Total Votes'] + '</div></div><div class="votepercent"><div class="caption">Vote %</div><div class="number">' + d['Vote %'] + '</div></div></div>'})
        candidateDiv.attr('class' , function(d,i){ return "candidate " + d.Party.replaceAll(' ','_') } )
        

        break
        }
    }
    }

function sortCandidates(candidates){
    candidates.sort((a,b) => {return b['Total Votes'] - a['Total Votes']})
    return candidates
}

function sortParties(parties){
    parties.sort((a,b) => {return b['seats'] - a['seats']})
    return parties
}
    </script>
</body>
</html>